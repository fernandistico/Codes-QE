#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
@author: fvera
"""
import networkx as nx
import matplotlib.pyplot as plt
import numpy as np

# Create a synthetic structural connectivity graph
# Simulate a simplified cortical microcircuit
G = nx.DiGraph()

# Add neuron nodes with types
neuron_types = ['excitatory', 'inhibitory']
for i in range(12):
    G.add_node(i, neuron_type=np.random.choice(neuron_types))

# Add directed weighted synaptic connections
np.random.seed(42)
for i in range(12):
    for j in range(12):
        if i != j and np.random.rand() < 0.3:
            weight = np.round(np.random.uniform(0.1, 1.0), 2)
            G.add_edge(i, j, weight=weight)

# Assign colors based on neuron type
colors = ['skyblue' if G.nodes[n]['neuron_type'] == 'excitatory' else 'salmon' for n in G.nodes]

# Draw the graph
plt.figure(figsize=(10, 7))
pos = nx.spring_layout(G, seed=1)
nx.draw(G, pos, with_labels=True, node_color=colors, node_size=800, arrowsize=20, edge_color='gray')
nx.draw_networkx_edge_labels(G, pos, edge_labels={(u, v): f"{d['weight']}" for u, v, d in G.edges(data=True)})

plt.title("Static Structural Connectivity Graph\n(Directed Synaptic Connections with Weights)")
plt.axis('off')
plt.show()
